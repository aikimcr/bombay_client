:root {
    --color-black: rgb(0, 0, 0);
    --color-black-25: rgb(25, 25, 25);
    --color-black-50: rgb(50, 50, 50);

    --color-white: rgb(255, 255, 255);
    --color-white-200: rgb(200, 200, 200);
    --color-white-180: rgb(180, 180, 180);

    --color-peach-175: rgb(175, 149, 100);
    --color-peach-255: rgb(255, 229, 180);

    --color-blue-220: rgb(6, 6, 220);
    --color-blue-250: rgb(27, 27, 250);

    --container-background-color: var(--color-white-200);
    --container-color: var(--color-black-50);
    --container-border: .5rem solid var(--color-black-25);
    --form-container-border: .25rem solid var(--color-peach-175);

    --header-background-color: rgb(0, 255, 0);
    --header-color: rgb(255, 255, 0);
    --header-bar-parts-background-color: rgb(255, 0, 0);

    --messaging-background-color: rgb(0, 0, 255);
    --messaging-color: rgb(255, 0, 255);

    --navigation-background-color: white;
    --navigation-color: black;

    --sidebar-background-color: $navigation-background-color;
    --sidebar-color: $navigation-color;

    --standard-font-size: 2rem;

    --title-font-size: 4rem;

    --card-background: rgba(127, 127, 127, 0.5);

    --standard-button-size: calc(var(var(--standard-font-size)) + 1rem);
    --primary-button-background-color: rgb(76, 76, 243);
    --primary-button-color: rgb(25, 25, 25);
    --secondary-button-background-color: var(--color-black-50);
    --secondary-button-color: var(--color-white-200);
}

@mixin standard-container {
    background-color: var(--container-background-color);
    color: var(--black-50);
    border: var(--container-border);
    padding: 1rem;
}

@mixin form-container {
    background-color: var(--color-peach-255);
    color: var(--black-50);
    border: var(--form-container-border);
    border-radius: 2rem;
    padding: 2.5rem;
}

@mixin utiliity-component-background {

    a {
        color: white;
        font-size: 2rem;
        ;
    }
}

body,
div,
input {
    box-sizing: border-box;
    font-size: var(--standard-font-size);
    line-height: var(--standard-font-size);
}

input[type="submit"],
input[type="button"],
.btn {
    text-align: center;
    padding: 0 10px;
    background-color: rgb(32, 32, 32);
    color: white;
    height: var(--standard-button-size);
    line-height: var(--standard-button-size) - 5px; // Subtract 5px to account for the padding
    cursor: pointer;
    border-radius: calc(var(--standard-button-size) / 2);

    &:hover {
        background-color: rgb(80, 75, 227);
    }

    &:active {
        background-color: rgb(128, 128, 128);
        border-style: inset;
        border-color: black;
    }

    &:disabled,
    &.disabled {
        background-color: rgb(128, 128, 128);
        pointer-events: none;
        cursor: auto;
    }
}

label,
.label {
    height: var(--standard-font-size);
    line-height: var(--standard-font-size);
    width: 100px;
    overflow: hidden;
}

input .input {
    position: relative;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: var(--standard-font-size);
}

// Parent element must have height specificed.  100% should work.
@mixin scrollListContainer($overflow-x: hidden) {
    height: 100%;
    overflow-y: auto;
    overflow-x: $overflow-x;

    > * {
        margin-top: 0;
        margin-bottom: 0;
        padding-top: 0;
        padding-bottom: 0;
    }
}

@mixin ellipsisText {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.list-component {
    height: 100%;
    width: 100%;

    display: grid;
    grid-template-rows: var(--standard-button-size) + 10px auto;
    grid-template-areas:
        "header"
        "content"
}

.list-controls {
    grid-area: header;
    height: var(--standard-button-size) + 10px;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 10px;

    .title {
        font-size: var(--title-font-size);
        font-weight: bold;
    }
}

.list-container {
    grid-area: content;
    @include scrollListContainer;
}

.picker-list,
.card-list {
    background: linear-gradient(160deg, rgb(64, 64, 60), rgb(64, 60, 64), rgb(60, 64, 64));
    list-style: none;
    padding: 5px;

    display: grid;
    grid-template-columns: 1fr;
    gap: 5px;

    &:empty:after {
        position: relative;
        top: 5em;
        left: calc(50% - 6ch);
        font-size: var(--title-font-size);
        content: 'No items found';
    }
}

// This was a dumb idea. Do it another way.  Do Not Commit
// $layout-allowance: 200px;
// $minimum-card-width: 400px;

// @media(min-width: calc($minimum-card-width * 2 + $layout-allowance)) {
//     .card-list {
//         grid-template-columns: repeat(2, 1fr);
//     }
// }

// @media(min-width: calc($minimum-card-width * 3 + $layout-allowance)) {
//     .card-list {
//         grid-template-columns: repeat(3, 1fr);

//         &:has(> .card.wide) {
//             grid-template-columns: repeat(2, 1fr);
//         }
//     }
// }

// @media(min-width: calc($minimum-card-width * 4 + $layout-allowance)) {
//     .card-list {
//         grid-template-columns: repeat(4, 1fr);

//         &:has(> .card.wide) {
//             grid-template-columns: repeat(4, 1fr);
//         }
//     }
// }

.picker-component {
    position: absolute;
    right: 0;
    height: 15em;
    width: 10em;
    padding: 0;
    margin: 0;
    z-index: 1;

    .list-container {
        width: 10em;
        padding: 0;
        margin: 0;
    }
}

.picker-list {
    flex-direction: column;
    flex-wrap: nowrap;

    width: 100%;
}

.picker-item {
    background-color: var(--messaging-background-color);
    color: var(--messaging-color);
    @include ellipsisText;
    font-size: var(--standard-font-size);
    line-height: var(--standard-font-size);
    padding: 0.5em 1em;
}

.card {
    background: var(--card-background);
    box-shadow: 5px 5px 10px 1px rgb(0, 0, 0);
    font-size: var(--standard-font-size);
    line-height: var(--standard-font-size);
    width: 100%;
    min-width: var(--minimum-card-width);
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    border-radius: .5em;
    padding: 0;

    &.wide {
        grid-column: span 2;
        min-width: calc(var(--minimum-card-width) * 2);
    }

    .header {
        border-bottom: thin black solid;
        background-color: var(--header-background-color);
        color: var(--header-color);
    }

    .name {
        padding: 0 1em;
        border: thin black solid;
        background-color: var(--sidebar-background-color);
        color: var(--sidebar-color);
    }

    &:has(> .details:empty) {
        .header {
            display: none;
        }
    }

    .details {
        margin: 1em 0;
        padding: 0 1em;

        display: grid;
        grid-template-columns: minmax(5em, 10em) auto;
        width: fit-content;

        &:empty {
            display: none;
        }

        .label,
        .text,
        .long-text {
            margin: .5em .5em 0 0;
        }

        .long-text {
            background-color: rgba(128, 128, 200, .3);
            min-width: 25ch;
            max-width: 100ch;
            min-height: 5ch;
            max-height: 25ch;
            padding: .5em;
            @include scrollListContainer(auto);

            &:has(> pre:empty) {
                display: none;
            }
        }

        .label {
            text-align: left;
        }

        .text,
        .long-text {
            &:empty {
                background: linear-gradient(160deg, rgba(255, 255, 255, .1), rgba(0, 0, 0, .1));
            }
        }
    }
}