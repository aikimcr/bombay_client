@use '../../global.scss';

.close-or-clear,
.close {
    color: black;
    background-color: white;
    border-color: black;
    border-style: solid;
    border-radius: 50%;
    font-size: var(--standard-font-size);
    line-height: var(--standard-font-size);
    height: calc(var(--standard-font-size) * 1.5);
    text-align: center;
    padding: 0;
    cursor: pointer;
}

.close-or-clear,
.close {
    width: calc(var(--standard-font-size) * 1.5);
}

.picker-button,
.old-labeled-input,
.labeled-select,
.labeled-textarea {
    position: relative;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;

    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    flex-wrap: nowrap;
    gap: 1em;

    width: 100%;

    label {
        min-width: 30%;
        height: var(--standard-font-size);
        line-height: var(--standard-font-size);
    }

    // > button,
    // > input {
    //     flex-grow: 2;
    //     width: 100%;
    //     padding: 1px 1em;
    // }

    .toggle {
        width: 4em;
        position: absolute;
        top: 0;
        right: 0;
    }
}

.picker-button {
    > button {
        position: relative;
        background-color: white;
        color: black;
        border-radius: 0;
        font-size: var(--standard-font-size);
        text-align: left;

        &:after {
            position: absolute;
            right: 0.5em;
            content:  '\25BC';
        }

        &:has(+ div) {
            &:after {
                content: '\25B2';
                right: 1em;
            }
        }
    }

    input {
        display: none;
    }
}

.labeled-select {
    > select {
        font-size: var(--standard-font-size);
        padding: 1px .75em;
        cursor: pointer;
    }
}

.labeled-textarea {
    textarea {
        min-width: 25ch;
        max-width: 100ch;
        width: 100%;

        min-height: 30ch;
        max-height: 100ch;
        height: 100%;
    }
}